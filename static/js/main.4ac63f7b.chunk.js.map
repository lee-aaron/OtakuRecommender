{"version":3,"sources":["img/index.jpg","img/404.jpg","Home/HomePage.js","AnimeRecommend/AnimeRecommend.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HomePage","react_default","a","createElement","className","src","Home","alt","Route","render","_ref","history","id","type","onClick","push","exact","path","Component","AnimeRecommend","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","data","sendQuery","bind","assertThisInitialized","handleChange","e","setState","target","value","_this2","preventDefault","port","process","PORT","axios","get","params","then","res","catch","error","console","Background","onSubmit","htmlFor","placeholder","required","autoComplete","onChange","includes","map","item","key","App","navItems","text","Link","to","apply","BrowserRouter","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ac63f7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/index.436d52dc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/404.02317273.jpg\";","import React, { Component } from 'react';\nimport './HomePage.css';\nimport Home from '../img/index.jpg';\nimport { Route } from 'react-router-dom';\n\nclass HomePage extends Component {\n\n    render() {\n        let welcome = \"Welcome to Otaku Recommender!\";\n\n        const Button = () => (\n            <Route render={({history}) => (\n                <button\n                    id=\"home_page\"\n                    type=\"button\"\n                    onClick={() => { history.push(\"/anime-recommend\") }}>\n                    Click here to get started!\n                </button>\n            )} />\n        )\n\n        return (\n            <div>\n                <img className=\"bg-img\" src={Home} alt=\"\" />\n                <div className=\"home_page_content\">\n                    <h1 className=\"info spacing\">{welcome}</h1>\n                    <Button />\n                </div>\n                <Route exact path=\"/anime-recommendation\" />\n            </div>\n        )\n    }\n}\n\nexport default HomePage;","import React, { Component } from 'react';\nimport './AnimeRecommend.css';\nimport Background from '../img/404.jpg';\nimport axios from 'axios';\n\nclass AnimeRecommend extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      username: '',\n      data: \"\"\n    };\n\n    this.sendQuery = this.sendQuery.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  sendQuery(e) {\n    e.preventDefault();\n\n    this.setState({\n      data: \"\"\n    })\n\n    let port = process.env.PORT || 5000;\n    axios.get(\"http://localhost:\" + port + \"/recommend\", {\n      params: {\n        username: this.state.username\n      }\n    })\n      .then(res => {\n        this.setState({\n          data: res.data\n        })\n      })\n      .catch(error => {\n        console.error(error);\n      });\n\n  }\n\n  render() {\n    return (\n      <div className=\"anime-recommend\">\n        <img className=\"bg-img\" src={Background} alt=\"\" />\n        <div className=\"anime-recommend-content\">\n          <form onSubmit={this.sendQuery}>\n            <label className=\"username\" htmlFor=\"username\">Enter Username</label>\n            <input className=\"form-control mr-sm-2\" placeholder=\"Bob\" type=\"text\" required autoComplete=\"off\" onChange={this.handleChange} /><br />\n            <button className=\"btn btn-success\" type=\"submit\">Recommend Me!</button>\n          </form>\n          {\n            this.state && this.state.data !== \"\" && !this.state.data.includes(\"Error\") &&\n            <table className=\"table\">\n              <tbody>{this.state.data.map(function (item, key) {\n                return (\n                  <tr key={key}>\n                    <td>{item}</td>\n                  </tr>\n                )\n              })}</tbody>\n            </table>\n          }\n          {\n            this.state && this.state.data !== \"\" && this.state.data.includes(\"Error\") &&\n            <div className=\"error\">\n              There was an error with your input\n            </div>\n          }\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default AnimeRecommend;","import React, { Component } from 'react';\nimport './App.css';\nimport './bootstrap.css';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\nimport HomePage from './Home/HomePage';\nimport AnimeRecommend from './AnimeRecommend/AnimeRecommend';\n\nfunction make_link(path, text) {\n  return (\n    <div className=\"nav-item\" key={path}>\n      <Link className=\"nav-link\" to={path}>{text}</Link>\n    </div>\n  )\n}\n\nclass App extends Component {\n  render() {\n    let navItems = [\n      [\"/\", \"Home\"],\n      [\"/donate\", \"Donate\"],\n      [\"/about\", \"About\"],\n      [\"/contact\", \"Contact\"]\n    ].map((item) => make_link.apply(null, item));\n    let name = \"Otaku Recommender\";\n    return (\n      <Router>\n        <div className=\"App\">\n          <nav className=\"navbar navbar-expand bg-light\">\n            <Link className=\"navbar-brand\" to='/' >\n              <div>{name}</div>\n            </Link>\n            <div className=\"navbar-collapse\">\n              <div className=\"navbar-nav ml-auto\">\n                { navItems }\n              </div>\n            </div>\n          </nav>\n          <Route exact path=\"/\" component={ HomePage } />\n          <Route exact path=\"/donate\" />\n          <Route exact path=\"/about\" />\n          <Route exact path=\"/contact\" />\n          <Route exact path=\"/anime-recommend\" component={AnimeRecommend} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}